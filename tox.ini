[tox]
envlist = py27,py36,static,pidiff,docs

[testenv]
deps=-rtest-requirements.txt
commands=pytest -v {posargs}
allowlist_externals=sh

[testenv:py27]
deps=
	# Note: we need to explicitly list requirements.txt here
	# so it's processed at the same time as the constraints file
	-rrequirements.txt
	-cconstraints-legacy.txt
	-rtest-requirements.txt

[testenv:static]
deps=
	-rtest-requirements.txt
	black==22.3.0
	pylint==2.7.2
commands=
	black --check .
	sh -c 'pylint pubtools; test $(( $? & (1|2|4|32) )) = 0'

[testenv:pidiff]
deps=pidiff
skip_install=true
commands=pidiff pubtools-pulplib . pubtools.pulplib {posargs}

[testenv:cov]
deps=
	-rtest-requirements.txt
	pytest-cov
	pytest-timeout
usedevelop=true
commands=
	pytest -svv --timeout 60 --cov-report=html --cov-report=xml --cov=pubtools --cov-fail-under=100 {posargs}

[testenv:cov-travis]
passenv = TRAVIS TRAVIS_*
deps=
	-rtest-requirements.txt
	pytest-cov
	coveralls
usedevelop=true
commands=
	pytest --cov=pubtools {posargs}
	coveralls --service=github

[testenv:docs]
deps=
	sphinx
	alabaster
use_develop=true
commands=
	sphinx-build -M html docs docs/_build -W

[testenv:py3-bandit-exitzero]
deps=
    bandit
commands=
    # Skip B101 low severity assert warnings in the tests directory
    bandit -r ./tests --severity-level low  --exit-zero --skip B101
    bandit -r . -l --exclude './.tox,./tests' --exit-zero

[testenv:py3-bandit]
deps=
    bandit
commands=
    bandit -r . -ll --exclude './.tox'

[pytest]
testpaths = tests
